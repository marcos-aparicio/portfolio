@tailwind base;
@tailwind components;
@tailwind utilities;

:root {
  --distance: 25vw;
}
* {
  font-family: "Montserrat", sans-serif;
  margin: 0;
  padding: 0;
}
body {
  height: 100vh;
  display: flex;
}
.wrap {
  transform: translateY(10vh);
}
.line {
  overflow: visible;
  position: relative;
  display: flex;
}
.left,
.right {
  width: var(--distance);
  overflow: hidden;
  display: inline-block;
}
.left {
  @apply text-primary;
  transform: skew(0deg, -15deg);
}
.right {
  transform: skew(0deg, 15deg);
}
.left .content {
  width: calc(var(--distance) * 2);
  text-align: center;
}
.right .content {
  width: calc(var(--distance) * 2);
  text-align: center;
  /* transform: translateX(calc(var(--distance) * -1)); */
  transform: translateX(calc(var(--distance) * -1));
}

span {
  display: inline-block;
  font-family: "Montserrat", sans-serif;
  font-size: 5.5vw;
  font-weight: 900;
  text-transform: uppercase;
  line-height: 0.8;
  transition: ease-out 0.6s;
}
.job span {
  font-size: 3.5vw !important;
}

.underline-effect {
  display: inline-block;
  position: relative;
  cursor: pointer;
}

.underline-effect::after {
  content: "";
  position: absolute;
  width: 100%;
  transform: scaleX(0);
  height: 2px;
  bottom: 0;
  left: 0;
  background-color: var(--primary);
  transform-origin: bottom right;
  transition: transform 0.25s ease-out;
}

.underline-effect:hover::after {
  transform: scaleX(1);
  transform-origin: bottom left;
}

.theme-light {
  /* font color variables */
  --primary: theme("colors.orange.500");
  --secondary: theme("colors.gray.700");
  color: theme("colors.black") !important;

  /* background color variables */
  --surface: rgb(255, 255, 255);
  background-color: rgb(255, 255, 255) !important;
}

.theme-dark {
  /* font color variables */
  --primary: theme("colors.orange.600");
  --secondary: theme("colors.gray.300");
  color: theme("colors.white") !important;

  /* background color variables */
  --surface: theme("colors.gray.950");
  --base: theme("colors.slate.950");
  background-color: var(--surface) !important;
}
