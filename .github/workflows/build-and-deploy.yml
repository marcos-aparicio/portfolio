name: Build and deploy Application

on:
  release:
    types: [published]
  workflow_dispatch:

env:
  # the path will already include the project name there when using rsync
  REMOTE_PROJECT_PATH: ./projects
  REMOTE_PROJECT_NAME: portfolio

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: checkouts
        uses: actions/checkout@v4

      - name: Use Node.js 18 (to build frontend)
        uses: actions/setup-node@v2
        with:
          node-version: "18"
      - name: Build Frontend
        run: |
          npm ci
          npm run build

      - name: Zip artifact for deployment
        run: |
          cd dist
          zip ../release.zip -r *
      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.REMOTE_PROJECT_NAME }}
          path: release.zip

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: ${{ env.REMOTE_PROJECT_NAME }}

      - name: Unzip artifact for deployment
        run: |
          mkdir "${{ env.REMOTE_PROJECT_NAME }}"
          unzip release.zip -d "${{ env.REMOTE_PROJECT_NAME }}"
          rm release.zip

      - name: Install SSH key
        run: |
          mkdir -p ~/.ssh/
          echo "${{ secrets.SSH_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -t rsa -p ${{ secrets.SSH_PORT }} ${{ secrets.SSH_HOST }} >> ~/.ssh/known_hosts

      - name: Copy Build to Target Server
      - run: |
          apt-get update -y
          apt-get install -y rsync
        if: ${{ github.event.act }}
      - run: |
          rsync -r -e "ssh -p ${{ secrets.SSH_PORT }}" "${{ github.workspace }}"/"${{ env.REMOTE_PROJECT_NAME }}"  "${{ secrets.SSH_USERNAME }}"@"${{ secrets.SSH_HOST }}":"${{ env.REMOTE_PROJECT_PATH }}" --delete

      - name: Creates Symbolic Link
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          port: ${{ secrets.SSH_PORT }}
          key: ${{ secrets.SSH_KEY }}
          script_stop: true
          script: |
            pwd
            ln -sf "${{ env.REMOTE_PROJECT_PATH }}"/"${{ env.REMOTE_PROJECT_NAME }}" ~/domains/marcos-aparicio.xyz/public_html
